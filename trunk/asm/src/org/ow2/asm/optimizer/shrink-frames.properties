###############################################################################
#ASM: a very small and fast Java bytecode manipulation framework
#Copyright (c) 2000-2005 INRIA, France Telecom
#All rights reserved.
#
#Redistribution and use in source and binary forms, with or without
#modification, are permitted provided that the following conditions
#are met:
#1. Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the following disclaimer.
#2. Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the following disclaimer in the
#   documentation and/or other materials provided with the distribution.
#3. Neither the name of the copyright holders nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this software without specific prior written permission.
#
#THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
#LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
#THE POSSIBILITY OF SUCH DAMAGE.
###############################################################################

# class mappings

org/ow2/asm/Frame/remove=true

# field mappings

org/ow2/asm/ClassWriter.typeCount=-
org/ow2/asm/ClassWriter.typeTable=-

org/ow2/asm/Label.frame=-

org/ow2/asm/MethodWriter.frameCount=-
org/ow2/asm/MethodWriter.stackMap=-
org/ow2/asm/MethodWriter.previousFrameOffset=-
org/ow2/asm/MethodWriter.previousFrame=-
org/ow2/asm/MethodWriter.frameIndex=-
org/ow2/asm/MethodWriter.frame=-

# method mappings

org/ow2/asm/ClassReader.readFrameType([Ljava/lang/Object;II[C[Lorg/ow2/asm/Label;)I=-

org/ow2/asm/ClassWriter.addType(Ljava/lang/String;)I=-
org/ow2/asm/ClassWriter.addUninitializedType(Ljava/lang/String;I)I=-
org/ow2/asm/ClassWriter.addType(Lorg/ow2/asm/Item;)Lorg/ow2/asm/Item;=-
org/ow2/asm/ClassWriter.getMergedType(II)I=-

org/ow2/asm/MethodWriter.startFrame(III)V=-
org/ow2/asm/MethodWriter.endFrame()V=-
org/ow2/asm/MethodWriter.writeFrame()V=-
org/ow2/asm/MethodWriter.writeFrameTypes(II)V=-
org/ow2/asm/MethodWriter.writeFrameType(Ljava/lang/Object;)V=-
